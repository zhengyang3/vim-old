"Cscope and Ctags Usage 
"Usage:
"#######   Ctrl+j/k  (Use ctags's define);        Ctrl+\+ c/f/e (Use Cscope's functions) 
"#######  Simple:   find ./ -name "*.h" -o -name "*.c" >> cscope.files ; cscope -bq ; ctags -L cscope.files
"
"
"#######  Details:
"#######  cd ~/src/project
"#######  find path1 path2 -name "*.h" -o -name "*.c" -o -name "*.cpp" -o -name "*.java" >> cscope.files  (find可以同时指定多个路径)
"#######  cscope -bq         (update datebase automatically)                      
"Ctag Usage
"#######  ctags -L cscope.files    or   ctags –R


"all plugins: 
"MRU 
"CommandT 
"pathogen
"watchman
"Nerdtree
"tagbar
"minibufexplorer
"grep
"quickfix
"Cscope
"easymotion
"expand-region


set nu
set ignorecase
set smartcase
"set keywordprg=dic
"set hlsearch
set incsearch 
set foldmethod=indent
"set nofoldenable
set fdo-=search
set foldclose=all
set foldlevel=5

"The two lines set tab convert to 4 spaces automatically!
set tabstop=4
set expandtab
"set auto indent and indent 4 space
set smartindent
set shiftwidth=4
set softtabstop=4

" Identify Chinese Code: 1: Xshell/SecureCRT set UTF-8 must
"                        2: vim set fileencodings
"                        3: if you want to use english but can identify Chinese code , set LANG=en_US.UTF-8 in bash.bashrc
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8

"nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>
nmap <space> <C-d>
nmap B <C-u>
"nmap gp "0p
"nmap gP "0P

set t_Co=256


let mapleader = ","
let g:mapleader = ","


nmap <leader>r :MRU<CR>

execute pathogen#infect()
syntax on
filetype plugin indent on

nmap <leader>e :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
let g:NERDTreeDirArrows=0


"tagbar need ctags, put ctags.exe in your intalled derectory ,not $PATH,If you are using Windows!!
nmap <leader>a :TagbarToggle<CR>
let tagbar_left=1
let tagbar_autofocus=1
let tagbar_map_help = "&"


map z <Nop>
map zj <C-W>j
map zk <C-W>k
map zh <C-W>h
map zl <C-W>l
nnoremap zb :bn<CR>
"Tips: use zr with zm; use zo/zv with zc
"zr:reduce level;   zo:open   zc:close 
nnoremap zz zz
nnoremap zn zr<bar>zz
nnoremap zN zR<bar>zz
nnoremap zc zc<bar>zz
nnoremap zC zC<bar>zz
nnoremap zo zo<bar>zz
nnoremap zO zO<bar>zz
nnoremap zm zm<bar>zz
nnoremap zM zM<bar>zz
nnoremap zv zv<bar>zz
nnoremap z- z-
nnoremap z<CR> z<CR>
nmap yh y^
nmap yl y$
nmap dh d^
nmap dl d$
vmap do :diffget<CR>
nmap du :diffupdate<CR>
nmap dm :windo diffthis<CR>
map gh ^
map gl $
map gn *
map gN #

"Close every window in the current tabview but the current one
map go <C-w>o

"modify just for EnhancedJumps,the key "{" and "g;" are very convenient
nmap ( g<C-o><bar>zz
nmap ) g<C-i><bar>zz

map <C-k> <C-T>
map <C-j> <C-]>

nmap <C-p> <Plug>yankstack_substitute_older_paste
nmap <C-n> <Plug>yankstack_substitute_newer_paste

map K <C-y>
map J <C-e>
nnoremap <leader>J J

nmap <leader>q :qa!<cr>
nmap <C-l> [c
nmap <C-h> ]c


"clear  ,then you can set ff=unix/dos !
nmap <leader>c :%s/\r$//g<CR>

"Ctags config: the ; must be added,otherwise the file of Tags canot be loaded automatically
set tags=tags;
"set autochdir


if has("cscope") 
"    set cscopequickfix=s-,c-,d-,i-,t-,e- 
    set cscopetag 
    "0 cscope fist; 1 ctags first
    set csto=1 
    if filereadable("cscope.out")   
        cs add cscope.out   
    "else search cscope.out elsewhere   
    else   
       let cscope_file=findfile("cscope.out", ".;")   
       let cscope_pre=matchstr(cscope_file, ".*/")   
       if !empty(cscope_file) && filereadable(cscope_file)   
           exe "cs add" cscope_file cscope_pre   
       endif             
     endif 
    set cscopeverbose 

    nmap <C-\>s :cs find s <C-R>=expand("<cword>")<CR><CR>
    nmap <C-\>g :cs find g <C-R>=expand("<cword>")<CR><CR>
    nmap <C-\>c :cs find c <C-R>=expand("<cword>")<CR><CR>
    nmap <C-\>t :cs find t <C-R>=expand("<cword>")<CR><CR>
    nmap <C-\>e :cs find e <C-R>=expand("<cword>")<CR><CR>
    nmap <C-\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
    nmap <C-\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
    nmap <C-\>d :cs find d <C-R>=expand("<cword>")<CR><CR>
endif

if &diff  
	colorscheme railscasts
endif  


" allows incsearch highlighting for range commands
cnoremap $t <CR>:t''<CR>
cnoremap $T <CR>:T''<CR>
cnoremap $m <CR>:m''<CR>
cnoremap $M <CR>:M''<CR>
cnoremap $d <CR>:d<CR>``



vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)


"Mark plugin config
nmap  <Leader>s <Plug>MarkRegex
nmap <Leader>M <Plug>MarkToggle 
nmap <Leader>N <Plug>MarkAllClear 


"Jump to the position last time you quit
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif


let g:DirDiffExcludes = "CVS,*.class,*.exe,.*.swp,.git"
let g:DirDiffWindowSize = 14


" Adjust windows size, "<C-w>=" To original state
nmap <Leader>- :vertical resize -15<cr>
if bufwinnr(1)
	map + <C-W>20>
	map - <C-W>20<
endif


if has("gui_running")
        "au GUIEnter * simalt ~x " 窗口启动时自动最大化
        set guioptions-=m " 隐藏菜单栏
        set guioptions-=T " 隐藏工具栏
        set guioptions-=L " 隐藏左侧滚动条
        set guioptions-=r " 隐藏右侧滚动条
        set guioptions-=b " 隐藏底部滚动条
        "set showtabline=0 " 隐藏Tab栏
        set guifont=Inconsolata:h14
        colorscheme railscasts
        set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
        winpos 830 150 "设置初始界面位置  
        set lines=55 columns=93 "设置初始界面大小 
endif

colorscheme railscasts
